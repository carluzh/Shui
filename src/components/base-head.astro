---
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
  description: string;
  author: string;
  image?: string; // Optional image prop
}

const { title, description, author, image } = Astro.props;
const baseUrl = "https://shuitangs.com"; // Set your custom domain
const finalImage = image ? `${baseUrl}${image}` : `${baseUrl}/images/op.png`; // Use provided image or fallback
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content={author} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:site_name" content={author} />
<meta property="og:image" content={finalImage} /> <!-- Use final image -->

<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={finalImage} /> <!-- Use final image -->

<ViewTransitions />

<script is:inline>
  function updateTheme() {
    document.documentElement.classList.add("dark");
  }

  // Initial theme application
  document.addEventListener("astro:page-load", updateTheme, { once: true });

  // Apply theme after each navigation
  document.addEventListener("astro:after-swap", updateTheme);

  // Apply theme to new document before swap
  document.addEventListener("astro:before-swap", (ev) => {
    ev.newDocument.documentElement.classList.add("dark");
  });
</script>
